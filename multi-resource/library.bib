% Encoding: UTF-8

@InProceedings{Grandl2016,
  author    = {Grandl, Robert and Chowdhury, Mosharaf and Akella, Aditya and Ananthanarayanan, Ganesh},
  title     = {Altruistic Scheduling in Multi-Resource Clusters},
  booktitle = {Proceedings of OSDI{\textquoteright}16: 12\textsuperscript{th} USENIX Symposium on Operating Systems Design and Implementation},
  year      = {2016},
  pages     = {65},
  file      = {Grandl2016 - Altruistic Scheduling in Multi-Resource Clusters.pdf:PDF/Grandl2016 - Altruistic Scheduling in Multi-Resource Clusters.pdf:PDF},
}

@InProceedings{Ghodsi2011,
  author    = {Ghodsi, Ali and Zaharia, Matei and Hindman, Benjamin and Konwinski, Andy and Shenker, Scott and Stoica, Ion},
  title     = {Dominant Resource Fairness: Fair Allocation of Multiple Resource Types},
  booktitle = {Proceedings of the 8\textsuperscript{th} USENIX Conference on Networked Systems Design and Implementation},
  year      = {2011},
  series    = {NSDI'11},
  pages     = {323--336},
  address   = {Berkeley, CA, USA},
  publisher = {USENIX Association},
  acmid     = {1972490},
  file      = {:PDF/Ghodsi2011 - Dominant Resource Fairness_ Fair Allocation of Multiple Resource Types.pdf:PDF},
  location  = {Boston, MA},
  numpages  = {14},
  url       = {http://dl.acm.org/citation.cfm?id=1972457.1972490},
}

@InProceedings{Grandl2014,
  author    = {Robert Grandl and Ganesh Ananthanarayanan and Srikanth Kandula and Sriram Rao and Aditya Akella},
  title     = {Multi-resource packing for cluster schedulers},
  booktitle = {Proceedings of the 2014 {ACM} conference on {SIGCOMM} - {SIGCOMM} {\textquotesingle}14},
  year      = {2014},
  series    = {SIGCOMM '14},
  pages     = {455--466},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery ({ACM})},
  acmid     = {2626334},
  doi       = {10.1145/2619239.2626334},
  file      = {Grandl2014 - Multi-resource Packing for Cluster Schedulers.pdf:PDF/Grandl2014 - Multi-resource packing for cluster schedulers.pdf:PDF},
  isbn      = {978-1-4503-2836-4},
  keywords  = {cluster schedulers, completion time, fairness, makespan, multi-dimensional, packing},
  location  = {Chicago, Illinois, USA},
  numpages  = {12},
}

@InProceedings{Chowdhury2016,
  author    = {Mosharaf Chowdhury and Zhenhua Liu and Ali Ghodsi and Ion Stoica},
  title     = {HUG: Multi-Resource Fairness for Correlated and Elastic Demands},
  booktitle = {13\textsuperscript{th} USENIX Symposium on Networked Systems Design and Implementation (NSDI 16)},
  year      = {2016},
  pages     = {407--424},
  month     = mar,
  publisher = {USENIX Association},
  file      = {Chowdhury2016 - HUG_ Multi-Resource Fairness for Correlated and Elastic Demands.pdf:PDF/Chowdhury2016 - HUG_ Multi-Resource Fairness for Correlated and Elastic Demands.pdf:PDF},
  isbn      = {978-1-931971-29-4},
  location  = {Santa Clara, CA},
  owner     = {tefx},
  url       = {https://www.usenix.org/conference/nsdi16/technical-sessions/presentation/chowdhury},
}

@InProceedings{Hung2015,
  author    = {Chien-Chun Hung and Leana Golubchik and Minlan Yu},
  title     = {Scheduling jobs across geo-distributed datacenters},
  booktitle = {Proceedings of the Sixth {ACM} Symposium on Cloud Computing - {SoCC} {\textquotesingle}15},
  year      = {2015},
  series    = {SoCC '15},
  pages     = {111--124},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery ({ACM})},
  acmid     = {2806780},
  doi       = {10.1145/2806777.2806780},
  file      = {Hung2015 - Scheduling Jobs Across Geo-distributed Datacenters.pdf:PDF/Hung2015 - Scheduling jobs across geo-distributed datacenters.pdf:PDF},
  isbn      = {978-1-4503-3651-2},
  location  = {Kohala Coast, Hawaii},
  numpages  = {14},
}

@InProceedings{Wang2016,
  author    = {Wang, Wei and Li, Baochun and Liang, Ben and Li, Jun},
  title     = {Multi-resource Fair Sharing for Datacenter Jobs with Placement Constraints},
  booktitle = {Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis},
  year      = {2016},
  series    = {SC '16},
  pages     = {861--8612},
  address   = {Piscataway, NJ, USA},
  publisher = {IEEE Press},
  acmid     = {3015020},
  articleno = {86},
  file      = {Wang2016a - A user mode CPU–GPU scheduling framework for hybrid workloads.pdf:PDF/Wang2016a - A user mode CPU–GPU scheduling framework for hybrid workloads.pdf:PDF},
  isbn      = {978-1-4673-8815-3},
  keywords  = {cluster schedulers, fairness, multi-resource allocation, placement constraints},
  location  = {Salt Lake City, Utah},
  numpages  = {12},
  url       = {http://dl.acm.org/citation.cfm?id=3014904.3015020},
}

@InProceedings{Li2014,
  author    = {Yusen Li and Xueyan Tang and Wentong Cai},
  title     = {On dynamic bin packing for resource allocation in the cloud},
  booktitle = {Proceedings of the 26\textsuperscript{th} {ACM} symposium on Parallelism in algorithms and architectures - {SPAA} {\textquotesingle}14},
  year      = {2014},
  series    = {SPAA '14},
  pages     = {2--11},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery ({ACM})},
  acmid     = {2612675},
  doi       = {10.1145/2612669.2612675},
  file      = {Li2014 - On Dynamic Bin Packing for Resource Allocation in the Cloud.pdf:PDF/Li2014 - On dynamic bin packing for resource allocation in the cloud.pdf:PDF},
  isbn      = {978-1-4503-2821-0},
  keywords  = {approximation algorithms, cloud gaming, dynamic bin packing, request dispatching, worst case bounds},
  location  = {Prague, Czech Republic},
  numpages  = {10},
}

@InProceedings{Ren2016,
  author    = {Runtian Ren and Xueyan Tang},
  title     = {Clairvoyant Dynamic Bin Packing for Job Scheduling with Minimum Server Usage Time},
  booktitle = {Proceedings of the 28\textsuperscript{th} {ACM} Symposium on Parallelism in Algorithms and Architectures - {SPAA} {\textquotesingle}16},
  year      = {2016},
  series    = {SPAA '16},
  pages     = {227--237},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery ({ACM})},
  acmid     = {2935775},
  doi       = {10.1145/2935764.2935775},
  file      = {Ren2016 - Clairvoyant Dynamic Bin Packing for Job Scheduling with Minimum Server Usage Time.pdf:PDF/Ren2016 - Clairvoyant Dynamic Bin Packing for Job Scheduling with Minimum Server Usage Time.pdf:PDF},
  isbn      = {978-1-4503-4210-0},
  keywords  = {dynamic bin packing, job scheduling},
  location  = {Pacific Grove, California, USA},
  numpages  = {11},
}

@InProceedings{Tang2016,
  author       = {Tang, Shanjiang and He, BingSheng and Zhang, Shuhao and Niu, Zhaojie},
  title        = {Elastic multi-resource fairness: balancing fairness and efficiency in coupled CPU-GPU architectures},
  booktitle    = {Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis},
  year         = {2016},
  pages        = {75},
  organization = {IEEE Press},
  file         = {Tang2016 - Elastic multi-resource fairness_ balancing fairness and efficiency in coupled CPU-GPU architectures.pdf:PDF/Tang2016 - Elastic multi-resource fairness_ balancing fairness and efficiency in coupled CPU-GPU architectures.pdf:PDF},
}

@Article{Sheikhalishahi2016,
  author       = {Mehdi Sheikhalishahi and Richard M. Wallace and Lucio Grandinetti and Jos{\'{e}} Luis Vazquez-Poletti and Francesca Guerriero},
  title        = {A multi-dimensional job scheduling},
  year         = {2016},
  volume       = {54},
  pages        = {123--131},
  month        = jan,
  abstract     = {Abstract With the advent of new computing technologies, such as cloud computing and contemporary parallel processing systems, the building blocks of computing systems have become multi-dimensional. Traditional scheduling systems based on a single-resource optimization, like processors, fail to provide near optimal solutions. The efficient use of new computing systems depends on the efficient use of several resource dimensions. Thus, the scheduling systems have to fully use all resources. In this paper, we address the problem of multi-resource scheduling via multi-capacity bin-packing. We propose the application of multi-capacity-aware resource scheduling at host selection layer and queuing mechanism layer of a scheduling system. The experimental results demonstrate performance improvements of scheduling in terms of waittime and slowdown metrics. },
  doi          = {10.1016/j.future.2015.03.014},
  file         = {Sheikhalishahi2016 - A multi-dimensional job scheduling.pdf:PDF/Sheikhalishahi2016 - A multi-dimensional job scheduling.pdf:PDF},
  issn         = {0167-739X},
  journaltitle = {Future Generation Computer Systems},
  keywords     = {Multi-dimensional resource, Queuing mechanism, Resource management, Scheduling, Bin-packing, Performance },
  publisher    = {Elsevier {BV}},
}

@Article{Wang2016a,
  author       = {Bin Wang and Ruhui Ma and Zhengwei Qi and Jianguo Yao and Haibing Guan},
  title        = {A user mode {CPU}{\textendash}{GPU} scheduling framework for hybrid workloads},
  year         = {2016},
  volume       = {63},
  pages        = {25--36},
  month        = oct,
  note         = {Modeling and Management for Big Data Analytics and Visualization},
  abstract     = {Abstract Cloud platforms composed of multi-core \{CPU\} and many-core Graphics Processing Unit (GPU) have become powerful platforms to host incremental CPU–GPU workloads. In this paper, we study the problem of optimizing the \{CPU\} resource management while keeping the quality of service (QoS) of games. To this end, we propose vHybrid, a lightweight user mode runtime framework, in which we integrate a scheduling algorithm for \{GPU\} and two algorithms for \{CPU\} to efficiently utilize \{CPU\} resources with the control accuracy of QoS. vHybrid can maintain the desired QoS with low \{CPU\} utilization, while being able to guarantee better QoS performance with little overhead. Our evaluations show that vHybrid saves 37.29% of \{CPU\} utilization with satisfactory QoS for hybrid workloads, and reduces three orders of magnitude for QoS fluctuations, without any impact on \{GPU\} workloads. },
  doi          = {10.1016/j.future.2016.03.011},
  file         = {Wang2016a - A user mode CPU–GPU scheduling framework for hybrid workloads.pdf:PDF/Wang2016a - A user mode CPU_textendashGPU scheduling framework for hybrid workloads.pdf:PDF},
  issn         = {0167-739X},
  journaltitle = {Future Generation Computer Systems},
  keywords     = {Hybrid workloads, CPU–GPU resource management, Scheduling, Switched control },
  publisher    = {Elsevier {BV}},
}

@Article{Zhang2016,
  author       = {Weishan Zhang and Pengcheng Duan and Laurence T Yang and Feng Xia and Zhongwei Li and Qinghua Lu and Wenjuan Gong and Su Yang},
  title        = {Resource requests prediction in the cloud computing environment with a deep belief network},
  year         = {2016},
  pages        = {n/a--n/a},
  note         = {spe.2426},
  abstract     = {Accurate resource requests prediction is essential to achieve optimal job scheduling and load balancing for cloud Computing. Existing prediction approaches fall short in providing satisfactory accuracy because of high variances of cloud metrics. We propose a deep belief network (DBN)-based approach to predict cloud resource requests. We design a set of experiments to find the most influential factors for prediction accuracy and the best DBN parameter set to achieve optimal performance. The innovative points of the proposed approach is that it introduces analysis of variance and orthogonal experimental design techniques into the parameter learning of DBN. The proposed approach achieves high accuracy with mean square error of [10−6,10−5], approximately 72% reduction compared with the traditional autoregressive integrated moving average predictor, and has better prediction accuracy compared with the state-of-art fractal modeling approach. Copyright © 2016 John Wiley & Sons, Ltd.},
  doi          = {10.1002/spe.2426},
  file         = {Zhang2016a - Multi-Resource Partial-Ordered Task Scheduling in cloud computing.pdf:PDF/Zhang2016a - Multi-Resource Partial-Ordered Task Scheduling in cloud computing.pdf:PDF},
  issn         = {1097-024X},
  journaltitle = {Software: Practice and Experience},
  keywords     = {deep belief network, prediction, cloud computing, resource request},
  publisher    = {Wiley-Blackwell},
}

@Article{Zhou2016,
  author       = {Hang Zhou and Qing Li and Weiqin Tong and Samina Kausar and Hai Zhu},
  title        = {P-Aware: a proportional multi-resource scheduling strategy in cloud data center},
  year         = {2016},
  volume       = {19},
  number       = {3},
  pages        = {1089--1103},
  month        = jul,
  abstract     = {Concentrating on a single resource cannot efficiently cope with the overall high utilization of resources in cloud data centers. Nowadays multiple resource scheduling problem is more attractive to researchers. Some studies achieve progresses in multi-resource scenarios. However, these previous heuristics have obvious limitations in complex software defined cloud environment. Focusing on energy conservation and load balancing, we propose a preciousness model for multiple resource scheduling in this paper. We give the formulation of the problem and propose an innovative strategy (P-Aware). In P-Aware, a special algorithm PMDBP (Proportional Multi-dimensional Bin Packing) is applied in the multi-dimensional bin packing approach. In this algorithm, multiple resources are consumed in a proportional way. Structure and details of PMDBP are discussed in this paper. Extensive experiments demonstrate that our strategy outperforms others both in efficiency and load balancing. Now P-Aware has been implemented in the resource management system in our cooperative company to cut energy consumption and reduce resource contention.},
  doi          = {10.1007/s10586-016-0593-6},
  file         = {Zhou2016 - P-Aware_ a proportional multi-resource scheduling strategy in cloud data center.pdf:PDF/Zhou2016 - P-Aware_ a proportional multi-resource scheduling strategy in cloud data center.pdf:PDF},
  issn         = {1573-7543},
  journaltitle = {Cluster Computing},
  publisher    = {Springer Nature},
}

@InProceedings{Bonald2015,
  author    = {Thomas Bonald and James Roberts},
  title     = {Multi-Resource Fairness: Objectives, Algorithms and Performance},
  booktitle = {Proceedings of the 2015 {ACM} {SIGMETRICS} International Conference on Measurement and Modeling of Computer Systems - {SIGMETRICS} {\textquotesingle}15},
  year      = {2015},
  series    = {SIGMETRICS '15},
  pages     = {31--42},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery ({ACM})},
  acmid     = {2745869},
  doi       = {10.1145/2745844.2745869},
  file      = {Bonald2015 - Multi-Resource Fairness_ Objectives, Algorithms and Performance.pdf:PDF/Bonald2015 - Multi-Resource Fairness_ Objectives, Algorithms and Performance.pdf:PDF},
  isbn      = {978-1-4503-3486-0},
  keywords  = {bottleneck max fairness, cluster computing, dominant resource fairness, multi-resource sharing, proportional fairness},
  location  = {Portland, Oregon, USA},
  numpages  = {12},
}

@Article{Tan2015,
  author       = {Jian Tan and Li Zhang and Min Li and Yandong Wang},
  title        = {Multi-resource Fair Sharing for Multiclass Workflows},
  year         = {2015},
  volume       = {42},
  number       = {4},
  pages        = {31--37},
  month        = jun,
  acmid        = {2788408},
  doi          = {10.1145/2788402.2788408},
  file         = {Tan2015 - Multi-resource Fair Sharing for Multiclass Workflows.pdf:PDF/Tan2015 - Multi-resource Fair Sharing for Multiclass Workflows.pdf:PDF},
  issn         = {0163-5999},
  issue_date   = {March 2015},
  journaltitle = {{ACM} {SIGMETRICS} Performance Evaluation Review},
  location     = {New York, NY, USA},
  numpages     = {7},
  publisher    = {Association for Computing Machinery ({ACM})},
}

@Article{Ghodsi2012,
  author       = {Ali Ghodsi and Vyas Sekar and Matei Zaharia and Ion Stoica},
  title        = {Multi-resource fair queueing for packet processing},
  year         = {2012},
  volume       = {42},
  number       = {4},
  pages        = {1},
  month        = sep,
  acmid        = {2377679},
  doi          = {10.1145/2377677.2377679},
  file         = {Ghodsi2012 - Multi-resource Fair Queueing for Packet Processing.pdf:PDF/Ghodsi2012 - Multi-resource fair queueing for packet processing.pdf:PDF},
  issn         = {0146-4833},
  issue_date   = {October 2012},
  journaltitle = {{ACM} {SIGCOMM} Computer Communication Review},
  keywords     = {fair queueing, fairness, middleboxes, scheduling},
  location     = {New York, NY, USA},
  numpages     = {12},
  publisher    = {Association for Computing Machinery ({ACM})},
}

@InProceedings{Zhang2016a,
  author    = {Chaokun Zhang and Yong Cui and Rong Zheng and E Jinlong and Jianping Wu},
  title     = {Multi-Resource Partial-Ordered Task Scheduling in cloud computing},
  booktitle = {2016 {IEEE}/{ACM} 24\textsuperscript{th} International Symposium on Quality of Service ({IWQoS})},
  year      = {2016},
  pages     = {1--6},
  month     = jun,
  publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
  abstract  = {In this paper, we investigate the scheduling problem with multi-resource allocation in cloud computing environments. In contrast to existing work that focuses on flow-level scheduling, which treats flows in isolation, we consider dependency among subtasks of applications that imposes a partial order relationship in execution. We formulate the problem of Multi-Resource Partial-Ordered Task Scheduling (MR-POTS) to minimize the makespan. In the first stage, the proposed Dominant Resource Priority (DRP) algorithm decides the collection of subtasks for resource allocation by taking into account the partial order relationship and characteristics of subtasks. In the second stage, the proposed Maximum Utilization Allocation (MUA) algorithm partitions multiple resources among selected subtasks with the objective to maximize the overall utilization. Both theoretical analysis and experimental evaluation demonstrate the proposed algorithms can approximately achieve the minimal makespan with high resource utilization. Specifically, a reduction of 50% in makespan can be achieved compared with existing scheduling schemes.},
  doi       = {10.1109/iwqos.2016.7590423},
  file      = {Zhang2016a - Multi-Resource Partial-Ordered Task Scheduling in cloud computing.pdf:PDF/Zhang2016a - Multi-Resource Partial-Ordered Task Scheduling in cloud computing.pdf:PDF},
  keywords  = {cloud computing;minimisation;resource allocation;scheduling;DRP algorithm;MR-POTS;MUA algorithm;cloud computing;dominant resource priority;makespan minimization;maximum utilization allocation;multiple resources partitioning;multiresource allocation;multiresource partial-ordered task scheduling;partial order relationship;resource utilization;Algorithm design and analysis;Cloud computing;Optimal scheduling;Partitioning algorithms;Resource management;Scheduling algorithms},
}

@Article{Zhang2015,
  author       = {Jianhui Zhang and Keqiu Li and Deke Guo and Heng Qi and Wenxin Li and Yingwei Jin},
  title        = {MDFS: Deadline-Driven Flow Scheduling Scheme in Multi-Resource Environments},
  year         = {2015},
  volume       = {1},
  number       = {4},
  pages        = {207--219},
  month        = oct,
  abstract     = {Data centers have emerged as infrastructures for deploying various applications and services. To improve the security and performance, middleboxes are vastly deployed inside data centers to perform a large range of functionalities. Each of such middleboxes is equipped with diverse resources. Compared with traditional switches, middleboxes analyze the content of packets. This leads to the long processing time for flows passing through a middlebox. Additionally, executing different functionalities incurs diverse consumption on resources. Consequently, data flows undergoing different function components need different processing time on diverse resources. How to complete the transmission of such flows before their deadlines when passing through a middlebox comes out to be an essential issue, which lacks effective solutions. In this paper, we propose multi-resource & deadline-driven flow scheduling (MDFS) to satisfy the deadline requirements of flows in multi-resource environments. Besides guaranteeing the deadline, MDFS treats flows fairly and provides reliable service for them. To the best of our knowledge, this is the first paper trying to solve the deadline-driven flow scheduling problem in a multi-resource environment. With respect to the performance evaluation, up to  90 percent flows meet their deadlines in normal conditions by using MDFS, which greatly outperforms the performance of other scheduling schemes.},
  doi          = {10.1109/tmscs.2015.2506167},
  file         = {Zhang2015a - ATFQ_ A Fair and Efficient Packet Scheduling Method in Multi-Resource Environments.pdf:PDF/Zhang2015a - ATFQ_ A Fair and Efficient Packet Scheduling Method in Multi-Resource Environments.pdf:PDF},
  journaltitle = {{IEEE} Transactions on Multi-Scale Computing Systems},
  keywords     = {Bandwidth;Middleboxes;Optimal scheduling;Quality of service;Scheduling;Deadline-driven;fairness;middlebox;scheduling algorithm},
  publisher    = {Institute of Electrical and Electronics Engineers ({IEEE})},
}

@Article{Zhang2015a,
  author       = {Jianhui Zhang and Heng Qi and Deke Guo and Keqiu Li and Wenxin Li and Yingwei Jin},
  title        = {{ATFQ}: A Fair and Efficient Packet Scheduling Method in Multi-Resource Environments},
  year         = {2015},
  volume       = {12},
  number       = {4},
  pages        = {605--617},
  month        = dec,
  abstract     = {Large-scale data centers are the key infrastructures for hosting and running a variety of applications. Besides traditional L2/L3 devices, middleboxes are widely deployed in data centers and perform many important functions, e.g., the intrusion detection and firewall. Middleboxes are equipped with multiple kinds of resources, such as CPU and memory. Data flows undergoing different functions have heterogeneous processing time requirements on diverse resources. Researchers are in a dilemma as to how to provide fair service for flows and efficiently utilize those scarce resources. To address this problem, we propose a novel packet scheduling method, active time fairness queuing (ATFQ), for multi-resource environments. Prior packet scheduling methods usually focus on pursuing the fairness among flows, resulting in enormous waste of those scarce resources. ATFQ overcomes this essentially by redefining the fairness and can maximize the resource utilization with the guarantee of fairness. We conduct extensive simulations to evaluate the performance of ATFQ. The evaluation results demonstrate that flows get better service in many aspects under ATFQ. Meanwhile, the resource utilization rises up by about 10% than the traditional DRFQ, which is one of the mainstream involved methods.},
  doi          = {10.1109/tnsm.2015.2477517},
  file         = {Zhang2015a - ATFQ_ A Fair and Efficient Packet Scheduling Method in Multi-Resource Environments.pdf:PDF/Zhang2015a - ATFQ_ A Fair and Efficient Packet Scheduling Method in Multi-Resource Environments.pdf:PDF},
  issn         = {1932-4537},
  journaltitle = {{IEEE} Transactions on Network and Service Management},
  keywords     = {computer centres;queueing theory;resource allocation;scheduling;ATFQ;active time fairness queuing;large-scale data centers;middleboxes;multiresource environments;packet scheduling method;resource utilization;Bandwidth;Middleboxes;Resource management;Scheduling algorithms;Time measurement;Multi-resource;efficiency;fair scheduling;packet processing},
  publisher    = {Institute of Electrical and Electronics Engineers ({IEEE})},
}

@InProceedings{Zarchy2015,
  author    = {Doron Zarchy and David Hay and Michael Schapira},
  title     = {Capturing resource tradeoffs in fair multi-resource allocation},
  booktitle = {2015 {IEEE} Conference on Computer Communications ({INFOCOM})},
  year      = {2015},
  pages     = {1062--1070},
  month     = apr,
  publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
  abstract  = {Cloud computing platforms provide computational resources (CPU, storage, etc.) for running users' applications. Often, the same application can be implemented in various ways, each with different resource requirements. Taking advantage of this flexibility when allocating resources to users can both greatly benefit users and lead to much better global resource utilization. We develop a framework for fair resource allocation that captures such implementation tradeoffs by allowing users to submit multiple “resource demands”. We present and analyze two mechanisms for fairly allocating resources in such environments: the Lexicographically-Max-Min-Fair (LMMF) mechanism and the Nash-Bargaining (NB) mechanism. We prove that NB has many desirable properties, including Pareto optimality and envy freeness, in a broad variety of environments whereas the seemingly less appealing LMMF fares better, and is even immune to manipulations, in restricted settings of interest.},
  doi       = {10.1109/infocom.2015.7218479},
  file      = {Zarchy2015 - Capturing resource tradeoffs in fair multi-resource allocation.pdf:PDF/Zarchy2015 - Capturing resource tradeoffs in fair multi-resource allocation.pdf:PDF},
  issn      = {0743-166X},
  keywords  = {Pareto optimisation;cloud computing;resource allocation;storage management;LMMF mechanism;NB mechanism;Nash-Bargaining mechanism;Pareto optimality;cloud computing;computational resource tradeoff;fair resource allocation;global resource utilization;lexicographically-max-min-fair mechanism;multiresource allocation;Cloud computing;Computers;Conferences;Economics;Memory management;Niobium;Resource management},
}

@InProceedings{Kumar2015,
  author    = {Deepesh Kumar and Chanchal Kumar and Ajay Shanker Singh},
  title     = {Fair allocation of multi-resources for multi-class users in cloud computing},
  booktitle = {International Conference on Computing, Communication {\&} Automation},
  year      = {2015},
  pages     = {661--663},
  month     = may,
  publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
  abstract  = {Cloud computing is an on-demand growing technology. As we know the nature of cloud is heterogeneous and because of heterogeneous nature of cloud, it becomes very difficult to allocate resources to virtual machines. Using virtualization in cloud computing there is a disruptive change in satisfying the user quality of service (QoS). In this paper we have introduced a fairness function to solve the problem of multi-resource allocation (both physical and cloud) for multi-class users.},
  doi       = {10.1109/ccaa.2015.7148455},
  file      = {Kumar2015 - Fair allocation of multi-resources for multi-class users in cloud computing.pdf:PDF/Kumar2015 - Fair allocation of multi-resources for multi-class users in cloud computing.pdf:PDF},
  keywords  = {cloud computing;quality of service;resource allocation;virtual machines;virtualisation;cloud computing;cloud multiclass user;fairness function;heterogeneous cloud;multiresource allocation;user QoS;user quality of service;virtual machines;virtualization;Automation;Cloud computing;Measurement;Quality of service;Resource management;Virtual machining;Virtualization;Cloud computing;fairness;heterogeneous system;resource allocation},
}

@Article{Wang2015,
  author       = {Wei Wang and Ben Liang and Baochun Li},
  title        = {Multi-Resource Fair Allocation in Heterogeneous Cloud Computing Systems},
  year         = {2015},
  volume       = {26},
  number       = {10},
  pages        = {2822--2835},
  month        = oct,
  abstract     = {We study the multi-resource allocation problem in cloud computing systems where the resource pool is constructed from a large number of heterogeneous servers, representing different points in the configuration space of resources such as processing, memory, and storage. We design a multi-resource allocation mechanism, called DRFH, that generalizes the notion of Dominant Resource Fairness (DRF) from a single server to multiple heterogeneous servers. DRFH provides a number of highly desirable properties. With DRFH, no user prefers the allocation of another user; no one can improve its allocation without decreasing that of the others; and more importantly, no coalition behavior of misreporting resource demands can benefit all its members. DRFH also ensures some level of service isolation among the users. As a direct application, we design a simple heuristic that implements DRFH in real-world systems. Large-scale simulations driven by Google cluster traces show that DRFH significantly outperforms the traditional slot-based scheduler, leading to much higher resource utilization with substantially shorter job completion times.},
  doi          = {10.1109/tpds.2014.2362139},
  file         = {Wang2015 - Multi-Resource Fair Allocation in Heterogeneous Cloud Computing Systems.pdf:PDF/Wang2015 - Multi-Resource Fair Allocation in Heterogeneous Cloud Computing Systems.pdf:PDF},
  issn         = {1045-9219},
  journaltitle = {{IEEE} Transactions on Parallel and Distributed Systems},
  keywords     = {Cloud computing;Mechanical factors;Memory management;Resource management;Schedules;Servers;Vectors;Cloud computing;fairness;heterogeneous servers;job scheduling;multi-resource allocation},
  publisher    = {Institute of Electrical and Electronics Engineers ({IEEE})},
}

@InCollection{Coffman2013,
  author    = {Edward G. Coffman and J{\'{a}}nos Csirik and G{\'{a}}bor Galambos and Silvano Martello and Daniele Vigo},
  title     = {Bin Packing Approximation Algorithms: Survey and Classification},
  booktitle = {Handbook of Combinatorial Optimization},
  publisher = {Springer Nature},
  year      = {2013},
  editor    = {Pardalos, Panos M. and Du, Ding-Zhu and Graham, Ronald L.},
  pages     = {455--531},
  doi       = {10.1007/978-1-4419-7997-1_35},
  file      = {CoffmanJr.2013 - Bin Packing Approximation Algorithms_ Survey and Classification.pdf:PDF/Coffman2013 - Bin Packing Approximation Algorithms_ Survey and Classification.pdf:PDF},
  isbn      = {978-1-4419-7997-1},
  location  = {New York, NY},
}

@Article{Bonald2014,
  author       = {Thomas Bonald and James Roberts},
  title        = {Enhanced cluster computing performance through proportional fairness},
  journal      = {Performance Evaluation},
  year         = {2014},
  volume       = {79},
  pages        = {134--145},
  month        = sep,
  note         = {Special Issue: Performance 2014},
  abstract     = {Abstract The performance of cluster computing depends on how concurrent jobs share multiple data center resource types such as CPU, \{RAM\} and disk storage. Recent research has discussed efficiency and fairness requirements and identified a number of desirable scheduling objectives including so-called dominant resource fairness (DRF). We argue here that proportional fairness (PF), long recognized as a desirable objective in sharing network bandwidth between ongoing data transfers, is preferable to DRF. The superiority of \{PF\} is manifest under the realistic modeling assumption that the population of jobs in progress is a stochastic process. In random traffic the strategy-proof property of \{DRF\} proves unimportant while \{PF\} is shown by analysis and simulation to offer a significantly better efficiency–fairness tradeoff. },
  doi          = {10.1016/j.peva.2014.07.009},
  file         = {:PDF/Bonald2014 - Enhanced cluster computing performance through proportional fairness.pdf:PDF},
  issn         = {0166-5316},
  journaltitle = {Performance Evaluation},
  keywords     = {Cluster computing, Multi-resource sharing, Proportional fairness, Dominant resource fairness },
  publisher    = {Elsevier {BV}},
}

@Comment{jabref-meta: databaseType:bibtex;}

@Comment{jabref-meta: fileDirectory:/home/tefx/Desktop/Papers/Multi-resoueces/PDF;}

@Comment{jabref-meta: fileDirectory-tefx-tefx-XPS:/home/tefx/Desktop/Papers/Multi-resoueces/PDF;}
